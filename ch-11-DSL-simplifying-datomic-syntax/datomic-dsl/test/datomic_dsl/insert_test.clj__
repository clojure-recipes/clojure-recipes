;lein test :only datomic-dsl.insert-test
(ns datomic-dsl.insert-test
  (:require [clojure.test :refer :all]
            [datomic-dsl.insert :refer :all]
            [datomic-dsl.common-test :refer :all]
            [datomic-dsl.create-test :refer :all]
            [clojure.pprint :refer :all]
            [datomic.api :as d]))

; Note that the schema is set up by the reference to create-test above

;TODO:  why do we need the nil at the end - can't we make this optional or get rid of it?
(comment
  
  (def book-insert
    (insert-datom "book" 
                  {"title" "Mutiny on the Bounty" 
                   "author" "Charles Nordhoff"} nil)))

(def book-insert
  (insert-datom "book" 
                {"title" "Mutiny on the Bounty" 
                 "author" "Charles Nordhoff"}))


(pprint book-insert)

(def insert-result 
  "Keep a reference to the transaction result if we need to look at it later"
  (d/transact conn book-insert))

;now query against it
;Note the full stop in the query
(def book-entity 
  (d/touch 
   (d/entity 
    (d/db conn) 
    (d/q '[:find ?e . :where [?e :book/author]]
         (d/db conn)))))

;(pprint book-entity)

(deftest datom-inserted-test
  (testing "Is the datom inserted in the database?"
    (is (= 2 (count book-entity)))))
